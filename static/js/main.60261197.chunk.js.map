{"version":3,"sources":["firebase.js","Components/Footer.js","Components/Home.js","Auth.js","Components/Login.js","Components/Signup.js","Components/PageNotFound.js","PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Footer","bottom","bg","w","justifyContent","fontSize","mb","textAlign","mt","color","href","database","Home","props","state","categories","currentUser","auth","a","uid","setState","ref","orderByKey","on","snapshot","percent","todos","completed","todo","val","key","orderByChild","todoSnap","push","Math","round","length","prevState","name","categoriesCopy","JSON","parse","stringify","i","main","this","off","React","Component","Display","toast","useToast","useState","setCurrentUser","category","setCategory","setTodo","colors","useEffect","handleCatSubmit","event","preventDefault","duplicate","title","description","status","duration","isClosable","handleTodoChange","value","target","handleTodoSubmit","handleCheck","e","data","item","update","handleTodoDelete","remove","handleCatNChange","window","location","reload","handleTodoNChange","h","overflow","left","flexDir","onClick","signOut","colorScheme","ml","mr","onSubmit","fontWeight","textTransform","onChange","variant","placeholder","type","spacing","columns","map","index","p","rounded","defaultValue","minH","tIndex","isChecked","size","aria-label","icon","Delete","AuthContext","createContext","AuthProvider","children","onAuthStateChanged","Provider","Login","email","password","user","setUser","history","useHistory","handleLogin","signInWithEmailAndPassword","error","includes","handleChange","useContext","align","top","Signup","repassword","createUserWithEmailAndPassword","then","userCredentials","updateProfile","displayName","set","justifySelf","PageNotFound","PrivateRoute","RouteComponent","component","rest","render","routeProps","to","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","process","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60261197.chunk.js","sourcesContent":["\n// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport firebase from \"firebase/app\";\n// If you are using v7 or any earlier version of the JS SDK, you should import firebase using namespace import\n// import * as firebase from \"firebase/app\"\n\n// If you enabled Analytics in your project, add the Firebase SDK for Analytics\nimport \"firebase/analytics\";\n\nimport \"firebase/database\";\nimport 'firebase/auth'\n\nexport const app = firebase.initializeApp({\n  apiKey: \"AIzaSyDsO6Wug98IpiIXnm-vsXsraxJQ_s7mUoc\",\n  authDomain: \"fhshacks-todo.firebaseapp.com\",\n  projectId: \"fhshacks-todo\",\n  storageBucket: \"fhshacks-todo.appspot.com\",\n  messagingSenderId: \"611067837827\",\n  appId: \"1:611067837827:web:a674f15fd9af22aed74ab6\",\n  measurementId: \"G-PTFP9C39P7\"\n})\nexport default app;\n","import React from 'react'\n\nimport {\n  Text,\n  Flex,\n  Link\n} from '@chakra-ui/react'\n\nconst Footer = () => {\n  return (\n    <>\n      <Flex bottom='1%' bg='gray.800' w='100%' justifyContent='center'>\n        <Text fontSize={20} mb='1%' textAlign='center' mt='5%' color='white'>\n          &copy; 2021{\" \"}\n          <Link color=\"cyan\" href=\"https://eliaswambugu.com\">\n            Elias Wambugu\n        </Link>\n\n        </Text>\n      </Flex>\n    </>\n  )\n}\n\nexport default Footer","import React, { useState, useEffect } from 'react'\n\nimport {\n  Text,\n  Flex,\n  Button,\n  Box,\n  Input,\n  SimpleGrid,\n  Select,\n  CircularProgress,\n  CircularProgressLabel,\n  List,\n  ListItem,\n  Checkbox,\n  IconButton,\n  useToast,\n  Editable,\n  EditableInput,\n  EditablePreview,\n} from '@chakra-ui/react'\n\nimport app from '../firebase'\nimport firebase from 'firebase/app'\nimport {\n  DeleteIcon,\n} from '@chakra-ui/icons'\n\nimport Footer from './Footer'\n\nconst database = app.database()\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      categories: [],\n      currentUser: ''\n    }\n  }\n  componentDidMount() {\n    const user = firebase.auth().currentUser\n    if (user !== null) {\n      const main = async () => {\n        this.setState({\n          currentUser: await firebase.auth().currentUser.uid\n        })\n        await database.ref(`${this.state.currentUser}/categories`).orderByKey().on('child_added', async (snapshot) => {\n          let percent = 0;\n          let todos = [];\n          let completed = 0;\n          let todo = 0;\n          if (snapshot.val().todos) {\n            await database.ref(`${this.state.currentUser}/categories/${snapshot.key}/todos/`).orderByChild('completed').on('child_added', (todoSnap) => {\n              if (todoSnap.val().completed) {\n                completed = completed + 1\n\n              } else {\n                todo += 1\n              }\n              todos.push({\n                todo: todoSnap.val(),\n                key: todoSnap.key\n              })\n              percent = Math.round((completed / todos.length) * 100)\n            })\n          } else {\n            completed = 0\n            percent = 0\n          }\n\n          this.setState(prevState => ({\n            categories: [\n              ...prevState.categories,\n              {\n                name: snapshot.val().name,\n                todos: todos,\n                percent: percent,\n                todo,\n                completed: 0,\n                key: snapshot.key\n              }\n            ]\n          }))\n        })\n\n        await database.ref(`${this.state.currentUser}/categories/`).on('child_changed', async snapshot => {\n          let categoriesCopy = JSON.parse(JSON.stringify(this.state.categories))\n          for (var i = 0; i < categoriesCopy.length; i++) {\n            if (categoriesCopy[i].name === snapshot.val().name) {\n              let percent;\n              let todos = [];\n              let todo = 0;\n              let completed = 0;\n              if (snapshot.val().todos) {\n                await database.ref(`${this.state.currentUser}/categories/${snapshot.key}/todos/`).on('child_added', (todoSnap) => {\n                  if (todoSnap.val().completed) {\n                    completed += 1\n                  } else {\n                    todo += 1\n                  }\n                  todos.push({\n                    todo: todoSnap.val(),\n                    key: todoSnap.key\n                  })\n\n                  percent = Math.round((completed / todos.length) * 100)\n                })\n              } else {\n                percent = 0\n                completed = 0\n              }\n\n              // if (snapshot.val().completed) {\n              //   await database.ref('/categories/' + snapshot.key + '/completed/').on('child_added', (completedSnap) => {\n              //     completed.push({\n              //       todo: completedSnap.val(),\n              //       key: completedSnap.key\n              //     })\n              //   })\n\n              //   percent = Math.round((completed.length / (completed.length + todos.length)) * 100);\n              // } else {\n              //   percent = 0\n              // }\n\n              categoriesCopy[i] = {\n                name: snapshot.val().name,\n                todos: todos,\n                percent,\n                completed,\n                todo,\n                key: snapshot.key\n              }\n              this.setState({\n                categories: categoriesCopy\n              })\n            }\n          }\n        })\n      }\n\n      main()\n\n\n      // categories: [\n      //   ...prevState.categories,\n      //   {\n      //     name: snapshot.val().name,\n      //     completed: snapshot.val().completed,\n      //     todo: snapshot.val().todo,\n      //     todos: snapshot.val().todos\n      //   }\n      // ]\n    }\n  }\n\n  componentWillUnmount() {\n    database.ref(`${this.state.currentUser}/categories/`).off()\n  }\n\n  render() {\n    return (\n      <>\n        <Display currentUser={this.state.currentUser} categories={this.state.categories} />\n        {/* {this.state.categories.map((data, index) => (\n          <>\n            {data.todos.map((todo, tIndex) => (\n              <Text>{todo.name}</Text>\n            ))}\n          </>\n        ))} */}\n      </>\n    )\n  }\n}\nconst Display = (props) => {\n  const toast = useToast()\n  const [currentUser, setCurrentUser] = useState('')\n  const [category, setCategory] = useState('');\n  const [todo, setTodo] = useState({\n    name: '',\n    category: null,\n    key: ''\n  })\n\n  // eslint-disable-next-line\n  const [colors, setColors] = useState([\n    'orange.400',\n    'blue.400',\n    'red.400',\n    'purple.400'\n  ])\n\n  useEffect(() => {\n    setCurrentUser(props.currentUser)\n  }, [setCurrentUser, props.currentUser])\n\n  const handleCatChange = (event) => {\n    const value = event.target.value\n    setCategory(value)\n  }\n\n  const handleCatSubmit = async (event) => {\n    event.preventDefault()\n    var duplicate = false\n    for (var i = 0; i < props.categories.length; i++) {\n      if (props.categories[i].name === category) {\n        duplicate = true\n      }\n    }\n    if (!duplicate) {\n      if (props.categories.length >= 4) {\n        toast({\n          title: \"Uh Oh :(\",\n          description: \"The max number of categories is 4\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n        })\n      } else {\n        await database.ref(`${currentUser}/categories/`).push({\n          name: category,\n        })\n        setCategory('')\n      }\n    } else {\n      toast({\n        title: \"Uh Oh :(\",\n        description: \"Duplicate category\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      })\n    }\n  }\n\n  const handleTodoChange = (event) => {\n    const value = event.target.value\n    setTodo({\n      ...todo,\n      [event.target.name]: value\n    })\n  }\n\n\n  const handleTodoSubmit = async (event, key) => {\n    event.preventDefault()\n    // const newArr = categories.map((data, index) => {\n    //   if (index === todoCat) {\n    //     return {\n    //       ...data,\n    //       [todo]: [...todo, {\n    //         name: todo,\n    //         category: data.name\n    //       }]\n    //     }\n    //   }\n    // })\n    // // setCategories(newArr)\n    // await database.ref('categories/').push({\n    //   name: \n    // })\n    if (todo.name === \"\" || todo.category === null) {\n      toast({\n        title: \"Uh Oh :(\",\n        description: \"Please make sure to fill all fields\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      })\n    } else {\n      await database.ref(`${currentUser}/categories/${todo.category}/todos/`).push({\n        name: todo.name,\n        completed: false\n      })\n      setTodo({\n        ...todo,\n        name: ''\n      })\n    }\n  }\n\n\n  const handleCheck = async (e, data, item) => {\n    await database.ref(`${currentUser}/categories/${data.key}/todos/${item.key}`).update({\n      completed: !item.todo.completed\n    })\n\n  }\n\n  const handleTodoDelete = async (e, data, todo) => {\n    await database.ref(`${currentUser}/categories/${data.key}/todos/${todo.key}`).remove()\n  }\n\n  const handleCatNChange = async (e, data) => {\n    if (e !== data.name) {\n      await database.ref(`${currentUser}/categories/${data.key}`).update({\n        name: e\n      })\n      window.location.reload(true);\n    }\n  }\n\n  const handleTodoNChange = async (e, data, item) => {\n    if (e !== item.todo.name) {\n      await database.ref(`${currentUser}/categories/${data.key}/todos/${item.key}`).update({\n        name: e\n      })\n    }\n  }\n\n  const signOutUser = () => {\n    app.auth().signOut();\n  }\n\n  return (\n    <>\n      <Box w=\"100%\" h=\"100vh\" overflow=\"auto\" bg=\"gray.800\">\n      <Button left={['78%','80%' ,'88%' ,'90%']} w={['20%', '15%', '10%', '8%']} mt='2%' flexDir='end'  onClick={signOutUser} colorScheme=\"red\">Logout</Button>\n        <Box ml=\"5%\" mt=\"1%\" mr=\"5%\">\n          <form onSubmit={handleCatSubmit}>\n            <Flex w=\"100%\" flexDir={['column', 'column', \"row\", 'row']}>\n              <Text fontWeight=\"200\" color=\"white\" textTransform=\"uppercase\" fontSize={30}>categories</Text>\n              <Flex ml=\"2%\" w=\"100%\">\n                <Input value={category} onChange={handleCatChange} color=\"white\" ml=\"4%\" variant=\"flushed\" w={[\"60%\", '40%', '40%', \"30%\"]} placeholder=\"Create Category (max 4)\" />\n                <Button type=\"submit\" colorScheme=\"cyan\" ml=\"5%\">\n                  Create\n              </Button>\n                {props.categories.length}\n              </Flex>\n              \n            </Flex>\n          </form>\n\n          <SimpleGrid justifyContent=\"center\" mt=\"2%\" h=\"50%\" spacing={5} columns={[props.categories.length / 4, props.categories.length / 4, props.categories.length / 2, props.categories.length]}>\n            {props.categories\n              ? <>\n                {props.categories.map((data, index) => (\n                  <Flex flexDir=\"column\">\n                    <Box p={5} rounded={25} bg={colors[index]} w={300} h={200} overflow=\"auto\">\n                      <CircularProgress value={data.percent} color='blue.900'>\n                        <CircularProgressLabel>{data.percent}%</CircularProgressLabel>\n                      </CircularProgress>\n                      <Editable\n                        mt=\"15%\"\n                        fontSize={25}\n                        fontWeight=\"700\"\n                        onSubmit={(e) => handleCatNChange(e, data)}\n                        defaultValue={data.name}>\n                        <EditablePreview />\n                        <EditableInput />\n                      </Editable>\n                      <Text fontWeight=\"200\" ml=\"1%\" bottom={5}>{data.todos.length} Items</Text>\n                    </Box>\n                  </Flex>\n                ))}\n              </>\n              : null}\n          </SimpleGrid>\n          {props.categories\n            ? <>\n              <form onSubmit={handleTodoSubmit}>\n                <Flex w=\"100%\" mt=\"5%\" flexDir=\"row\" justifyContent=\"center\">\n                  <Input name=\"name\" value={todo.name} onChange={handleTodoChange} color=\"white\" placeholder=\"Add Item\" variant=\"flushed\" w=\"30%\" />\n                  <Select name=\"category\" value={todo.category} onChange={handleTodoChange} color=\"white\" ml=\"5%\" w=\"30%\" variant=\"flushed\" placeholder=\"Select category\">\n                    {props.categories.map((data, index) => (\n                      <option key={index} value={data.key}>{data.name}</option>\n                    ))}\n                  </Select>\n                  <Button type=\"submit\" colorScheme=\"cyan\" ml=\"5%\">\n                    Add Item\n                  </Button>\n                </Flex>\n              </form>\n            </>\n            : null\n          }\n\n          <SimpleGrid justifyContent=\"center\" mb=\"5%\" mt=\"5%\" h=\"50%\" spacing={5} columns={[props.categories.length / 4, props.categories.length / 4, props.categories.length / 4, props.categories.length]}>\n            {props.categories.map((data, index) => (\n              <>\n                <>\n                  <Flex>\n                    <Box color='white' rounded={25} bg=\"blue.900\" w={300} minH={400} h='auto' overflow=\"auto\">\n                      <Box bg={colors[index]} w=\"100%\" h={10}>\n                        <Text color=\"gray.900\" textAlign=\"center\" fontWeight=\"200\" fontSize={25}>{data.name}</Text>\n                      </Box>\n                      <Flex mt={\"2%\"} flexDir=\"column\" justifyContent=\"center\">\n                        <Text fontSize={20} ml=\"2%\" fontWeight=\"700\" textAlign=\"center\">\n                          Completed: {data.completed}\n                        </Text>\n                      </Flex>\n                      <List mt=\"5%\" ml=\"5%\" mr=\"5%\" mb=\"10%\">\n                        <Flex mt={\"2%\"} flexDir=\"column\" justifyContent=\"center\">\n                          <Text fontSize={20} fontWeight=\"700\" textAlign=\"center\">\n                            Todo: {data.todo}\n                          </Text>\n                        </Flex>\n                        {data.todos\n                          ? <>\n                            {data.todos.map((item, tIndex) => (\n                              <ListItem key={tIndex} mt=\"4%\">\n                                <Flex flexDir=\"row\">\n                                  <Checkbox isChecked={item.todo.completed} onChange={(e) => handleCheck(e, data, item)} colorScheme=\"green\"></Checkbox>\n                                  <Editable\n                                    ml=\"5%\"\n                                    onSubmit={(e) => handleTodoNChange(e, data, item)}\n                                    defaultValue={item.todo.name}>\n                                    <EditablePreview />\n                                    <EditableInput />\n                                  </Editable>\n                                  <IconButton onClick={(e) => handleTodoDelete(e, data, item)} ml=\"5%\" size=\"sm\" colorScheme=\"red\" aria-label='delete item' icon={<DeleteIcon />} />\n                                </Flex>\n                              </ListItem>\n                            ))}\n                          </>\n                          : null}\n                        { }\n                      </List>\n                    </Box>\n                  </Flex>\n                </>\n              </>\n            ))}\n          </SimpleGrid>\n        </Box>\n        <Footer />\n      </Box>\n    </>\n  )\n}\n\n\n\nexport default Home","import React, { useEffect, useState } from 'react';\nimport app from './firebase';\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged(setCurrentUser);\n  }, []);\n\n  return(\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useState, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  Text,\n  Box,\n  Flex,\n  Link,\n  Input,\n  Button,\n  useToast\n} from '@chakra-ui/react'\n\nimport app from '../firebase'\n\nimport { AuthContext } from \"../Auth\";\nimport Footer from './Footer';\n\nconst Login = () => {\n  const [user, setUser] = useState({\n    email: '',\n    password: ''\n  })\n  \n  const history = useHistory()\n  const toast = useToast()\n  \n  const handleLogin = async (event) => {\n    event.preventDefault();\n    try { \n      await app.auth().signInWithEmailAndPassword(user.email, user.password)\n      toast({\n        title: \"\",\n        description: \"Logged in!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n      })\n      history.push('/')\n    } catch (err) {\n      const error = JSON.stringify(err)\n      if (error.includes('There is no user record')) {\n        toast({\n          title: \"Uh Oh :(\",\n          description: \"Incorrect email/password\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n        })\n      } else if (error.includes('The password is invalid')) {\n        toast({\n          title: \"Uh Oh :(\",\n          description: \"Incorrect email/password\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n        })\n      } else {\n        toast({\n          title: \"Uh Oh :(\",\n          description: \"An error has occurred please try again\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n        })\n      }\n    }\n  }\n\n  const handleChange = (event) => {\n    const value = event.target.value\n    setUser({\n      ...user,\n      [event.target.name]: value\n    })\n  }\n\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    history.push('/')\n  }\n  return (\n    <>\n      <Box w=\"100%\" h=\"100vh\" overflow=\"auto\" bg=\"gray.800\">\n        <Box align='center' bg='gray.800'  w={['100%', '100%', '100%', '100%']} left={['50%', '50%', '50%', '50%']} top='20%'>\n          <Text color='white' fontSize={[60, 60, 70, 80]} fontWeight='200'>Welcome!</Text>\n          <form onSubmit={handleLogin}>\n            <Flex align='center' flexDir='column'>\n              <Input name='email' onChange={handleChange} value={user.email} color='white' w={['70%', '50%', '40%', '30%']} mt='2%' variant='flushed' placeholder=\"Email\" />\n              <Input name='password' type='password' onChange={handleChange} value={user.password} color='white'  w={['70%', '50%', '40%', '30%']} mt='5%' variant='flushed' placeholder='Password' />\n            </Flex>\n            <Button fontSize={20} colorScheme='cyan' w='20%' mt='2%' type='submit' >Login</Button>\n          </form>\n          <Text mt='2%' color='white'>\n            New User?{\" \"}\n            <Link color=\"cyan\" href=\"/signup\">\n              Signup\n            </Link>\n          </Text>\n        </Box>\n        <Footer />\n      </Box>\n    </>\n  )\n}\n\nexport default Login","import React, { useState, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  Text,\n  Box,\n  Flex,\n  Link,\n  Input,\n  Button,\n  useToast\n} from '@chakra-ui/react'\n\nimport app from '../firebase'\nimport { AuthContext } from \"../Auth\";\nimport Footer from './Footer';\n\n\nconst Signup = () => {\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    password: '',\n    repassword: ''\n  })\n\n  const history = useHistory()\n  const toast = useToast()\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    if (user.password !== user.repassword) {\n      toast({\n        title: \"Uh Oh :(\",\n        description: \"Passwords do not match\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      })\n    } else if (user.name !== '' && user.email !== '' && user.password !== '') {\n      try {\n        await app\n          .auth()\n          .createUserWithEmailAndPassword(user.email, user.password)\n          .then(async userCredentials => {\n            userCredentials.user.updateProfile({\n              displayName: user.name\n            })\n            await app.database().ref(`${userCredentials.user.uid}/user`).set({\n              email: user.email\n            })\n          })\n        toast({\n          title: \"\",\n          description: \"Account Created!\",\n          status: \"success\",\n          duration: 5000,\n          isClosable: true,\n        })\n        history.push('/')\n      } catch (err) {\n        const error = JSON.stringify(err)\n        if (error.includes('The email address is badly formatted.')) {\n          toast({\n            title: \"Uh Oh :(\",\n            description: \"The email address is badly formatted\",\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n          })\n        } else if (error.includes(\"least 6 characters\")) {\n          toast({\n            title: \"Uh Oh :(\",\n            description: \"Password must be at least 6 characters\",\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n          })\n        } else if (error.includes('The email address is already in use')) {\n          toast({\n            title: \"Uh Oh :(\",\n            description: \"This email address is already in use\",\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n          })\n        } else {\n          toast({\n            title: \"Uh Oh :(\",\n            description: err,\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n          })\n        }\n        // alert(err)\n      }\n    } else {\n      toast({\n        title: \"Uh Oh :(\",\n        description: \"All fields must be filled in\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      })\n    }\n  }\n\n  const handleChange = (event) => {\n    const value = event.target.value\n    setUser({\n      ...user,\n      [event.target.name]: value\n    })\n  }\n\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    history.push('/')\n  }\n\n  return (\n    <>\n      <Box  w=\"100%\" h=\"100vh\" overflow=\"auto\" bg=\"gray.800\">\n        <Box align='center' bg='gray.800'  w={['100%', '100%', '100%', '100%']} left={['50%', '50%', '50%', '50%']} top='10%'>\n          <Text textAlign='center' color='white' fontSize={[60, 60, 70, 80]} fontWeight='200'>Welcome!</Text>\n          <form onSubmit={handleLogin}>\n            <Flex align='center' flexDir='column'>\n              <Input name='name' onChange={handleChange} value={user.name} color='white' w={['70%', '50%', '40%', '30%']} mt='2%' variant='flushed' placeholder=\"Name\" />\n              <Input name='email' onChange={handleChange} value={user.email} color='white' w={['70%', '50%', '40%', '30%']} mt='5%' variant='flushed' placeholder=\"Email\" />\n              <Input name='password' type='password' onChange={handleChange} value={user.password} color='white' w={['70%', '50%', '40%', '30%']} mt='5%' variant='flushed' placeholder='Password' />\n              <Input name='repassword' type='password' onChange={handleChange} value={user.repassword} color='white' w={['70%', '50%', '40%', '30%']} mt='5%' variant='flushed' placeholder='Re-enter Password' />\n            </Flex>\n            <Button fontSize={20} justifySelf='center' colorScheme='cyan' w='20%' mt='2%' type='submit' >Signup</Button>\n          </form>\n          <Text mb='5%' mt='2%' color='white'>\n            Already A User?{\" \"}\n            <Link color=\"cyan\" href=\"/login\">\n              Login\n            </Link>\n          </Text>\n          \n        </Box>\n        <Footer />\n      </Box>\n    </>\n  )\n}\n\nexport default Signup","import React from 'react'\n\nimport {\n  Text,\n  Box\n} from '@chakra-ui/react'\n\nconst PageNotFound = () => {\n  return (\n    <>\n      <Box w='100%' h='100vh' bg=\"gray.800\">\n        <Text textAlign='center' align='center' color='white' fontWeight='200' fontSize={100} >404 :(</Text>\n     </Box>\n    </>\n  )\n}\n\nexport default PageNotFound","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from './Auth';\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest}) => {\n  // const {currentUser} = useContext(AuthContext);\n  const {currentUser} = useContext(AuthContext)\n  return(\n    <Route\n      {...rest}\n      render={routeProps =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Redirect to={'/login'} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute\n","import React from 'react'\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Home from './Components/Home'\nimport Login from './Components/Login'\nimport Signup from './Components/Signup'\nimport PageNotFound from './Components/PageNotFound'\n\nimport PrivateRoute from './PrivateRoute'\n\nimport { AuthProvider } from './Auth';\n\nconst App = () => {\n  return (\n    <>\n      <AuthProvider>\n        <Router>\n          <Switch>\n            {/* <Route exact path=\"/\" render={(props) => <Home {...props} />} /> */}\n            <PrivateRoute exact path='/' component={(props) => <Home {...props} />} />\n            <Route exact path=\"/login\" render={(props) => <Login {...props} />} />\n            <Route exact path=\"/signup\" render={(props) => <Signup {...props} />} />\n            <Route component={PageNotFound} />\n          </Switch>\n        </Router>\n      </AuthProvider>\n    </>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { ChakraProvider } from '@chakra-ui/react'\n\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}