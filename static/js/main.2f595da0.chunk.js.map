{"version":3,"sources":["firebase.js","Components/Footer.js","Components/Home.js","Auth.js","Components/Login.js","Components/Signup.js","Components/PageNotFound.js","Components/ForgotPass.js","Components/Admin.js","PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Footer","bottom","bg","w","justifyContent","fontSize","mb","textAlign","mt","color","href","database","Home","props","state","categories","currentUser","notifications","auth","a","user","ref","uid","orderByChild","on","snapshot","setState","prevState","title","val","body","date","viewed","key","update","displayName","email","orderByKey","percent","todos","completed","todo","todoSnap","push","Math","round","length","name","categoriesCopy","JSON","parse","stringify","i","main","this","off","React","Component","Display","toast","useToast","useState","currentUserUUID","setCurrentUser","currentUserEmail","category","setCategory","setTodo","colors","useEffect","map","data","index","description","status","duration","isClosable","handleCatSubmit","event","preventDefault","duplicate","handleTodoChange","value","target","handleTodoSubmit","handleCheck","e","item","handleTodoDelete","remove","handleCatNChange","window","location","reload","handleTodoNChange","signOutUser","signOut","history","useHistory","h","overflow","left","flexDir","onClick","colorScheme","ml","mr","onSubmit","fontWeight","textTransform","onChange","variant","placeholder","type","spacing","columns","p","rounded","defaultValue","minH","tIndex","isChecked","size","aria-label","icon","Delete","AuthContext","createContext","AuthProvider","children","onAuthStateChanged","Provider","Login","password","setUser","handleLogin","signInWithEmailAndPassword","error","includes","handleChange","useContext","align","top","Signup","repassword","createUserWithEmailAndPassword","then","userCredentials","updateProfile","set","sendEmailVerification","justifySelf","PageNotFound","ForgotPass","setEmail","handleSubmit","sendPasswordResetEmail","Admin","users","notification","setNotification","useDisclosure","isOpen","onOpen","onClose","handleNotification","Date","now","handleNotifChange","ChevronLeft","pos","_hover","cursor","borderWidth","borderRadius","borderColor","wordBreak","PrivateRoute","RouteComponent","component","rest","render","routeProps","to","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","process","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f595da0.chunk.js","sourcesContent":["\n// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport firebase from \"firebase/app\";\n// If you are using v7 or any earlier version of the JS SDK, you should import firebase using namespace import\n// import * as firebase from \"firebase/app\"\n\n// If you enabled Analytics in your project, add the Firebase SDK for Analytics\nimport \"firebase/analytics\";\n\nimport \"firebase/database\";\nimport 'firebase/auth'\n\nexport const app = firebase.initializeApp({\n  apiKey: \"AIzaSyDsO6Wug98IpiIXnm-vsXsraxJQ_s7mUoc\",\n  authDomain: \"fhshacks-todo.firebaseapp.com\",\n  projectId: \"fhshacks-todo\",\n  storageBucket: \"fhshacks-todo.appspot.com\",\n  messagingSenderId: \"611067837827\",\n  appId: \"1:611067837827:web:a674f15fd9af22aed74ab6\",\n  measurementId: \"G-PTFP9C39P7\"\n})\nexport default app;\n","import React from 'react'\n\nimport {\n  Text,\n  Flex,\n  Link\n} from '@chakra-ui/react'\n\nconst Footer = () => {\n  return (\n    <>\n      <Flex bottom='1%' bg='gray.800' w='100%' justifyContent='center'>\n        <Text fontSize={20} mb='1%' textAlign='center' mt='5%' color='white'>\n          &copy; 2021{\" \"}\n          <Link color=\"cyan\" href=\"https://eliaswambugu.com\">\n            Elias Wambugu\n        </Link>\n\n        </Text>\n      </Flex>\n    </>\n  )\n}\n\nexport default Footer","import React, { useState, useEffect } from 'react'\n\nimport { useHistory } from 'react-router-dom'\n\nimport {\n  Text,\n  Flex,\n  Button,\n  Box,\n  Input,\n  SimpleGrid,\n  Select,\n  CircularProgress,\n  CircularProgressLabel,\n  List,\n  ListItem,\n  Checkbox,\n  IconButton,\n  useToast,\n  Editable,\n  EditableInput,\n  EditablePreview,\n} from '@chakra-ui/react'\n\nimport app from '../firebase'\nimport firebase from 'firebase/app'\nimport {\n  DeleteIcon,\n} from '@chakra-ui/icons'\n\nimport Footer from './Footer'\n\nconst database = app.database()\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      categories: [],\n      currentUser: '',\n      notifications: []\n    }\n  }\n  componentDidMount() {\n    const user = firebase.auth().currentUser\n    if (user !== null) {\n      const main = async () => {\n        const user = app.auth().currentUser\n\n        await app.database().ref(`${user.uid}/notifications`).orderByChild('date').on('child_added', async (snapshot) => {\n          this.setState(prevState => ({\n            notifications: [\n              ...prevState.notifications,\n              {\n                title: snapshot.val().title,\n                body: snapshot.val().body,\n                date: snapshot.val().date,\n                viewed: snapshot.val().viewed,\n                key: snapshot.key,\n                user: user.uid\n              }\n            ]\n          }))\n        })\n\n        await app.database().ref(`${user.uid}/user`).update({\n          displayName: user.displayName,\n          email: user.email\n        })\n        this.setState({\n          currentUser: await firebase.auth().currentUser.uid\n        })\n        await database.ref(`${this.state.currentUser}/categories`).orderByKey().on('child_added', async (snapshot) => {\n          let percent = 0;\n          let todos = [];\n          let completed = 0;\n          let todo = 0;\n          if (snapshot.val().todos) {\n            await database.ref(`${this.state.currentUser}/categories/${snapshot.key}/todos/`).orderByChild('completed').on('child_added', (todoSnap) => {\n              if (todoSnap.val().completed) {\n                completed = completed + 1\n\n              } else {\n                todo += 1\n              }\n              todos.push({\n                todo: todoSnap.val(),\n                key: todoSnap.key\n              })\n              percent = Math.round((completed / todos.length) * 100)\n            })\n          } else {\n            completed = 0\n            percent = 0\n          }\n\n          this.setState(prevState => ({\n            categories: [\n              ...prevState.categories,\n              {\n                name: snapshot.val().name,\n                todos: todos,\n                percent: percent,\n                todo,\n                completed: 0,\n                key: snapshot.key\n              }\n            ]\n          }))\n        })\n\n        await database.ref(`${this.state.currentUser}/categories/`).on('child_changed', async snapshot => {\n          let categoriesCopy = JSON.parse(JSON.stringify(this.state.categories))\n          for (var i = 0; i < categoriesCopy.length; i++) {\n            if (categoriesCopy[i].name === snapshot.val().name) {\n              let percent;\n              let todos = [];\n              let todo = 0;\n              let completed = 0;\n              if (snapshot.val().todos) {\n                await database.ref(`${this.state.currentUser}/categories/${snapshot.key}/todos/`).on('child_added', (todoSnap) => {\n                  if (todoSnap.val().completed) {\n                    completed += 1\n                  } else {\n                    todo += 1\n                  }\n                  todos.push({\n                    todo: todoSnap.val(),\n                    key: todoSnap.key\n                  })\n\n                  percent = Math.round((completed / todos.length) * 100)\n                })\n              } else {\n                percent = 0\n                completed = 0\n              }\n\n              // if (snapshot.val().completed) {\n              //   await database.ref('/categories/' + snapshot.key + '/completed/').on('child_added', (completedSnap) => {\n              //     completed.push({\n              //       todo: completedSnap.val(),\n              //       key: completedSnap.key\n              //     })\n              //   })\n\n              //   percent = Math.round((completed.length / (completed.length + todos.length)) * 100);\n              // } else {\n              //   percent = 0\n              // }\n\n              categoriesCopy[i] = {\n                name: snapshot.val().name,\n                todos: todos,\n                percent,\n                completed,\n                todo,\n                key: snapshot.key\n              }\n              this.setState({\n                categories: categoriesCopy\n              })\n            }\n          }\n        })\n      }\n\n      main()\n\n\n      // categories: [\n      //   ...prevState.categories,\n      //   {\n      //     name: snapshot.val().name,\n      //     completed: snapshot.val().completed,\n      //     todo: snapshot.val().todo,\n      //     todos: snapshot.val().todos\n      //   }\n      // ]\n    }\n  }\n\n  componentWillUnmount() {\n    database.ref(`${this.state.currentUser}/categories/`).off()\n    database.ref(`${this.state.currentUser}/notifications/`).off()\n  }\n\n  render() {\n    return (\n      <>\n        <Display notifications={this.state.notifications} currentUser={this.state.currentUser} categories={this.state.categories} />\n        {/* {this.state.categories.map((data, index) => (\n          <>\n            {data.todos.map((todo, tIndex) => (\n              <Text>{todo.name}</Text>\n            ))}\n          </>\n        ))} */}\n      </>\n    )\n  }\n}\nconst Display = (props) => {\n  const toast = useToast()\n  const [currentUserUUID, setCurrentUser] = useState('')\n  // eslint-disable-next-line\n  const [currentUserEmail, setCurrentUserEmail] = useState(app.auth().currentUser.email)\n  const [category, setCategory] = useState('');\n  const [todo, setTodo] = useState({\n    name: '',\n    category: null,\n    key: ''\n  })\n\n  // eslint-disable-next-line\n  const [colors, setColors] = useState([\n    'orange.400',\n    'blue.400',\n    'red.400',\n    'purple.400'\n  ])\n\n  useEffect(() => {\n    setCurrentUser(props.currentUser)\n    if (props.notifications) {\n      props.notifications.map(async (data, index) => {\n        if (!data.viewed) {\n          toast({\n            title: data.title,\n            description: data.body,\n            status: \"success\",\n            duration: 10000,\n            isClosable: true,\n          })\n          await database.ref(`${data.user}/notifications/${data.key}`).update({\n            viewed: true\n          })\n        }\n      })\n    }\n  }, [setCurrentUser, props.currentUser, toast, props.notifications])\n\n  const handleCatChange = (event) => {\n    const value = event.target.value\n    setCategory(value)\n  }\n\n  const handleCatSubmit = async (event) => {\n    event.preventDefault()\n    var duplicate = false\n    for (var i = 0; i < props.categories.length; i++) {\n      if (props.categories[i].name === category) {\n        duplicate = true\n      }\n    }\n    if (!duplicate) {\n      if (props.categories.length >= 4) {\n        toast({\n          title: \"Uh Oh :(\",\n          description: \"The max number of categories is 4\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n        })\n      } else {\n        await database.ref(`${currentUserUUID}/categories/`).push({\n          name: category,\n        })\n        setCategory('')\n      }\n    } else {\n      toast({\n        title: \"Uh Oh :(\",\n        description: \"Duplicate category\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      })\n    }\n  }\n\n  const handleTodoChange = (event) => {\n    const value = event.target.value\n    setTodo({\n      ...todo,\n      [event.target.name]: value\n    })\n  }\n\n\n  const handleTodoSubmit = async (event, key) => {\n    event.preventDefault()\n    // const newArr = categories.map((data, index) => {\n    //   if (index === todoCat) {\n    //     return {\n    //       ...data,\n    //       [todo]: [...todo, {\n    //         name: todo,\n    //         category: data.name\n    //       }]\n    //     }\n    //   }\n    // })\n    // // setCategories(newArr)\n    // await database.ref('categories/').push({\n    //   name: \n    // })\n    if (todo.name === \"\" || todo.category === null) {\n      toast({\n        title: \"Uh Oh :(\",\n        description: \"Please make sure to fill all fields\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      })\n    } else {\n      await database.ref(`${currentUserUUID}/categories/${todo.category}/todos/`).push({\n        name: todo.name,\n        completed: false\n      })\n      setTodo({\n        ...todo,\n        name: ''\n      })\n    }\n  }\n\n\n  const handleCheck = async (e, data, item) => {\n    await database.ref(`${currentUserUUID}/categories/${data.key}/todos/${item.key}`).update({\n      completed: !item.todo.completed\n    })\n\n  }\n\n  const handleTodoDelete = async (e, data, todo) => {\n    await database.ref(`${currentUserUUID}/categories/${data.key}/todos/${todo.key}`).remove()\n  }\n\n  const handleCatNChange = async (e, data) => {\n    if (e !== data.name) {\n      await database.ref(`${currentUserUUID}/categories/${data.key}`).update({\n        name: e\n      })\n      window.location.reload(true);\n    }\n  }\n\n  const handleTodoNChange = async (e, data, item) => {\n    if (e !== item.todo.name) {\n      await database.ref(`${currentUserUUID}/categories/${data.key}/todos/${item.key}`).update({\n        name: e\n      })\n    }\n  }\n\n  const signOutUser = () => {\n    app.auth().signOut();\n  }\n\n  const history = useHistory()\n  const handleDashboard = () => {\n    history.push('/admin')\n  }\n\n  return (\n    <>\n      <Box w=\"100%\" h=\"100vh\" overflow=\"auto\" bg=\"gray.800\">\n        {currentUserEmail === 'admin@admin.com'\n          ?\n          <>\n            <Button left={['40%', '60%', '76%', '78%']} w={['28%', '20%', '10%', '8%']} mt='2%' flexDir='end' onClick={handleDashboard} colorScheme=\"cyan\">Dashboard</Button>\n            <Button left={['48%', '63%', '78%', '80%']} w={['20%', '15%', '10%', '8%']} mt='2%' flexDir='end' onClick={signOutUser} colorScheme=\"red\">Logout</Button>\n          </>\n          : <Button left={['78%', '80%', '88%', '90%']} w={['20%', '15%', '10%', '8%']} mt='2%' flexDir='end' onClick={signOutUser} colorScheme=\"red\">Logout</Button>\n        }\n        <Box ml=\"5%\" mt=\"1%\" mr=\"5%\">\n          <form onSubmit={handleCatSubmit}>\n            <Flex w=\"100%\" flexDir={['column', 'column', \"row\", 'row']}>\n              <Text fontWeight=\"200\" color=\"white\" textTransform=\"uppercase\" fontSize={30}>categories</Text>\n              <Flex ml=\"2%\" w=\"100%\">\n                <Input value={category} onChange={handleCatChange} color=\"white\" ml=\"4%\" variant=\"flushed\" w={[\"60%\", '40%', '40%', \"30%\"]} placeholder=\"Create Category (max 4)\" />\n                <Button type=\"submit\" colorScheme=\"cyan\" ml=\"5%\">\n                  Create\n              </Button>\n                {props.categories.length}\n              </Flex>\n\n            </Flex>\n          </form>\n\n          <SimpleGrid justifyContent=\"center\" mt=\"2%\" h=\"50%\" spacing={5} columns={[props.categories.length / 4, props.categories.length / 4, props.categories.length / 2, props.categories.length]}>\n            {props.categories\n              ? <>\n                {props.categories.map((data, index) => (\n                  <Flex flexDir=\"column\">\n                    <Box p={5} rounded={25} bg={colors[index]} w={300} h={200} overflow=\"auto\">\n                      <CircularProgress value={data.percent} color='blue.900'>\n                        <CircularProgressLabel>{data.percent}%</CircularProgressLabel>\n                      </CircularProgress>\n                      <Editable\n                        mt=\"15%\"\n                        fontSize={25}\n                        fontWeight=\"700\"\n                        onSubmit={(e) => handleCatNChange(e, data)}\n                        defaultValue={data.name}>\n                        <EditablePreview />\n                        <EditableInput />\n                      </Editable>\n                      <Text fontWeight=\"200\" ml=\"1%\" bottom={5}>{data.todos.length} Items</Text>\n                    </Box>\n                  </Flex>\n                ))}\n              </>\n              : null}\n          </SimpleGrid>\n          {props.categories\n            ? <>\n              <form onSubmit={handleTodoSubmit}>\n                <Flex w=\"100%\" mt=\"5%\" flexDir=\"row\" justifyContent=\"center\">\n                  <Input name=\"name\" value={todo.name} onChange={handleTodoChange} color=\"white\" placeholder=\"Add Item\" variant=\"flushed\" w=\"30%\" />\n                  <Select name=\"category\" value={todo.category} onChange={handleTodoChange} color=\"white\" ml=\"5%\" w=\"30%\" variant=\"flushed\" placeholder=\"Select category\">\n                    {props.categories.map((data, index) => (\n                      <option key={index} value={data.key}>{data.name}</option>\n                    ))}\n                  </Select>\n                  <Button type=\"submit\" colorScheme=\"cyan\" ml=\"5%\">\n                    Add Item\n                  </Button>\n                </Flex>\n              </form>\n            </>\n            : null\n          }\n\n          <SimpleGrid justifyContent=\"center\" mb=\"5%\" mt=\"5%\" h=\"50%\" spacing={5} columns={[props.categories.length / 4, props.categories.length / 4, props.categories.length / 4, props.categories.length]}>\n            {props.categories.map((data, index) => (\n              <>\n                <>\n                  <Flex>\n                    <Box color='white' rounded={25} bg=\"blue.900\" w={300} minH={400} h='auto' overflow=\"auto\">\n                      <Box bg={colors[index]} w=\"100%\" h={10}>\n                        <Text color=\"gray.900\" textAlign=\"center\" fontWeight=\"200\" fontSize={25}>{data.name}</Text>\n                      </Box>\n                      <Flex mt={\"2%\"} flexDir=\"column\" justifyContent=\"center\">\n                        <Text fontSize={20} ml=\"2%\" fontWeight=\"700\" textAlign=\"center\">\n                          Completed: {data.completed}\n                        </Text>\n                      </Flex>\n                      <List mt=\"5%\" ml=\"5%\" mr=\"5%\" mb=\"10%\">\n                        <Flex mt={\"2%\"} flexDir=\"column\" justifyContent=\"center\">\n                          <Text fontSize={20} fontWeight=\"700\" textAlign=\"center\">\n                            Todo: {data.todo}\n                          </Text>\n                        </Flex>\n                        {data.todos\n                          ? <>\n                            {data.todos.map((item, tIndex) => (\n                              <ListItem key={tIndex} mt=\"4%\">\n                                <Flex flexDir=\"row\">\n                                  <Checkbox isChecked={item.todo.completed} onChange={(e) => handleCheck(e, data, item)} colorScheme=\"green\"></Checkbox>\n                                  <Editable\n                                    ml=\"5%\"\n                                    onSubmit={(e) => handleTodoNChange(e, data, item)}\n                                    defaultValue={item.todo.name}>\n                                    <EditablePreview />\n                                    <EditableInput />\n                                  </Editable>\n                                  <IconButton onClick={(e) => handleTodoDelete(e, data, item)} ml=\"5%\" size=\"sm\" colorScheme=\"red\" aria-label='delete item' icon={<DeleteIcon />} />\n                                </Flex>\n                              </ListItem>\n                            ))}\n                          </>\n                          : null}\n                        { }\n                      </List>\n                    </Box>\n                  </Flex>\n                </>\n              </>\n            ))}\n          </SimpleGrid>\n        </Box>\n        <Footer />\n      </Box>\n    </>\n  )\n}\n\n\n\nexport default Home","import React, { useEffect, useState } from 'react';\nimport app from './firebase';\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged(setCurrentUser);\n  }, []);\n\n  return(\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useState, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  Text,\n  Box,\n  Flex,\n  Link,\n  Input,\n  Button,\n  useToast\n} from '@chakra-ui/react'\n\nimport app from '../firebase'\n\nimport { AuthContext } from \"../Auth\";\nimport Footer from './Footer';\n\nconst Login = () => {\n  const [user, setUser] = useState({\n    email: '',\n    password: ''\n  })\n\n  const history = useHistory()\n  const toast = useToast()\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    try {\n      await app.auth().signInWithEmailAndPassword(user.email, user.password)\n      toast({\n        title: \"\",\n        description: \"Logged in!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n      })\n\n      history.push('/')\n    } catch (err) {\n      const error = JSON.stringify(err)\n      if (error.includes('There is no user record')) {\n        toast({\n          title: \"Uh Oh :(\",\n          description: \"Incorrect email/password\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n        })\n      } else if (error.includes('The password is invalid')) {\n        toast({\n          title: \"Uh Oh :(\",\n          description: \"Incorrect email/password\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n        })\n      } else {\n        toast({\n          title: \"Uh Oh :(\",\n          description: error,\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n        })\n      }\n    }\n  }\n\n  const handleChange = (event) => {\n    const value = event.target.value\n    setUser({\n      ...user,\n      [event.target.name]: value\n    })\n  }\n\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    history.push('/')\n  }\n  return (\n    <>\n      <Box w=\"100%\" h=\"100vh\" overflow=\"auto\" bg=\"gray.800\">\n        <Box align='center' bg='gray.800' w={['100%', '100%', '100%', '100%']} left={['50%', '50%', '50%', '50%']} top='20%'>\n          <Text color='white' fontSize={[60, 60, 70, 80]} fontWeight='200'>Welcome!</Text>\n          <form onSubmit={handleLogin}>\n            <Flex align='center' flexDir='column'>\n              <Input name='email' onChange={handleChange} value={user.email} color='white' w={['70%', '50%', '40%', '30%']} mt='2%' variant='flushed' placeholder=\"Email\" />\n              <Input name='password' type='password' onChange={handleChange} value={user.password} color='white' w={['70%', '50%', '40%', '30%']} mt='5%' variant='flushed' placeholder='Password' />\n            </Flex>\n            <Button mb={['5%', '4%', '3%', '1%']} fontSize={20} colorScheme='cyan' w='20%' mt='2%' type='submit' >Login</Button>\n          </form>\n          <Link color=\"cyan\" href=\"/forgotpassword\">\n            Forgot Password\n          </Link>\n          <Text mt={['5%', '4%', '3%', '1%']} color='white'>\n            New User?{\" \"}\n            <Link color=\"cyan\" href=\"/signup\">\n              Signup\n            </Link>\n          </Text>\n        </Box>\n        <Footer />\n      </Box>\n    </>\n  )\n}\n\nexport default Login","import React, { useState, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  Text,\n  Box,\n  Flex,\n  Link,\n  Input,\n  Button,\n  useToast\n} from '@chakra-ui/react'\n\nimport app from '../firebase'\nimport { AuthContext } from \"../Auth\";\nimport Footer from './Footer';\n\n\nconst Signup = () => {\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    password: '',\n    repassword: ''\n  })\n\n  const history = useHistory()\n  const toast = useToast()\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    if (user.password !== user.repassword) {\n      toast({\n        title: \"Uh Oh :(\",\n        description: \"Passwords do not match\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      })\n    } else if (user.name !== '' && user.email !== '' && user.password !== '') {\n      try {\n        await app\n          .auth()\n          .createUserWithEmailAndPassword(user.email, user.password)\n          .then(async userCredentials => {\n            userCredentials.user.updateProfile({\n              displayName: user.name\n            })\n            await app.database().ref(`${userCredentials.user.uid}/user`).set({\n              email: user.email\n            })\n          })\n        await app.auth().currentUser.sendEmailVerification()\n        toast({\n          title: \"\",\n          description: \"Check your email to verify your account!\",\n          status: \"success\",\n          duration: 5000,\n          isClosable: true,\n        })\n        history.push('/')\n      } catch (err) {\n        const error = JSON.stringify(err)\n        if (error.includes('The email address is badly formatted.')) {\n          toast({\n            title: \"Uh Oh :(\",\n            description: \"The email address is badly formatted\",\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n          })\n        } else if (error.includes(\"least 6 characters\")) {\n          toast({\n            title: \"Uh Oh :(\",\n            description: \"Password must be at least 6 characters\",\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n          })\n        } else if (error.includes('The email address is already in use')) {\n          toast({\n            title: \"Uh Oh :(\",\n            description: \"This email address is already in use\",\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n          })\n        } else {\n          toast({\n            title: \"Uh Oh :(\",\n            description: err,\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n          })\n        }\n        // alert(err)\n      }\n    } else {\n      toast({\n        title: \"Uh Oh :(\",\n        description: \"All fields must be filled in\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      })\n    }\n  }\n\n  const handleChange = (event) => {\n    const value = event.target.value\n    setUser({\n      ...user,\n      [event.target.name]: value\n    })\n  }\n\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    history.push('/')\n  }\n\n  return (\n    <>\n      <Box  w=\"100%\" h=\"100vh\" overflow=\"auto\" bg=\"gray.800\">\n        <Box align='center' bg='gray.800'  w={['100%', '100%', '100%', '100%']} left={['50%', '50%', '50%', '50%']} top='10%'>\n          <Text textAlign='center' color='white' fontSize={[60, 60, 70, 80]} fontWeight='200'>Welcome!</Text>\n          <form onSubmit={handleLogin}>\n            <Flex align='center' flexDir='column'>\n              <Input name='name' onChange={handleChange} value={user.name} color='white' w={['70%', '50%', '40%', '30%']} mt='2%' variant='flushed' placeholder=\"Name\" />\n              <Input name='email' onChange={handleChange} value={user.email} color='white' w={['70%', '50%', '40%', '30%']} mt='5%' variant='flushed' placeholder=\"Email\" />\n              <Input name='password' type='password' onChange={handleChange} value={user.password} color='white' w={['70%', '50%', '40%', '30%']} mt='5%' variant='flushed' placeholder='Password' />\n              <Input name='repassword' type='password' onChange={handleChange} value={user.repassword} color='white' w={['70%', '50%', '40%', '30%']} mt='5%' variant='flushed' placeholder='Re-enter Password' />\n            </Flex>\n            <Button fontSize={20} justifySelf='center' colorScheme='cyan' w='20%' mt='2%' type='submit' >Signup</Button>\n          </form>\n          <Text mb='5%' mt='2%' color='white'>\n            Already A User?{\" \"}\n            <Link color=\"cyan\" href=\"/login\">\n              Login\n            </Link>\n          </Text>\n          \n        </Box>\n        <Footer />\n      </Box>\n    </>\n  )\n}\n\nexport default Signup","import React from 'react'\n\nimport {\n  Text,\n  Box\n} from '@chakra-ui/react'\n\nconst PageNotFound = () => {\n  return (\n    <>\n      <Box w='100%' h='100vh' bg=\"gray.800\">\n        <Text textAlign='center' align='center' color='white' fontWeight='200' fontSize={100} >404 :(</Text>\n     </Box>\n    </>\n  )\n}\n\nexport default PageNotFound","import React, { useState, useContext } from 'react'\n\nimport {\n  Box,\n  Flex,\n  Text,\n  Button,\n  useToast,\n  Input,\n  Link\n} from '@chakra-ui/react'\n\nimport { AuthContext } from \"../Auth\";\nimport app from '../firebase'\nimport { useHistory } from 'react-router-dom'\n\nconst ForgotPass = () => {\n  const [email, setEmail] = useState('')\n  const toast = useToast()\n  const history = useHistory()\n\n  const handleChange = (event) => {\n    const value = event.target.value\n    setEmail(value)\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (email === '') {\n      toast({\n        title: \"Uh Oh :(\",\n        description: \"All fields must be filled in\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      })\n    } else {\n      try {\n        await app.auth().sendPasswordResetEmail(email).then(() => {\n          toast({\n            title: \"\",\n            description: \"Email sent!\",\n            status: \"success\",\n            duration: 5000,\n            isClosable: true,\n          })\n        })\n        history.push('/login')\n      } catch (err) {\n        const error = JSON.stringify(err)\n        if (error.includes(\"There is no user record\")) {\n          toast({\n            title: \"Uh Oh :(\",\n            description: \"Invalid email\",\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n          })\n        } else if (error.includes(\"The email address is badly formatted.\")) {\n          toast({\n            title: \"Uh Oh :(\",\n            description: \"The email address is badly formatted\",\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n          })\n        } else {\n          toast({\n            title: \"Uh Oh :(\",\n            description: \"An error has occurred\",\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n          })\n        }\n      }\n    }\n  }\n\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    history.push('/')\n  }\n  return (\n    <>\n      <Box w=\"100%\" h=\"100vh\" overflow=\"auto\" bg=\"gray.800\">\n        <Box align='center' bg='gray.800' w={['100%', '100%', '100%', '100%']} left={['50%', '50%', '50%', '50%']} top='20%'>\n          <Text fontWeight='200' color='white' fontSize={[60, 60, 70, 80]}>Reset Password</Text>\n          <form onSubmit={handleSubmit}>\n            <Flex align='center' flexDir='column'>\n              <Input name='email' onChange={handleChange} value={email} color='white' w={['70%', '50%', '40%', '30%']} mt='2%' variant='flushed' placeholder=\"Email\" />\n              <Button mb={['5%', '4%', '3%', '1%']} fontSize={20} colorScheme='cyan' w={['50%', '40%', '30%', '20%']} mt='2%' type='submit' >Reset Password</Button>\n              <Link color=\"cyan\" href=\"/login\">\n                Login\n              </Link>\n            </Flex>\n          </form>\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nexport default ForgotPass","import React, { useState, useEffect } from 'react'\n\nimport {\n  Text,\n  Box,\n  Button,\n  Table,\n  Thead,\n  Tr,\n  Th,\n  Td,\n  Tbody,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Input,\n  useToast\n} from '@chakra-ui/react'\n\nimport {\n  ChevronLeftIcon\n} from '@chakra-ui/icons'\n\nimport app from '../firebase'\nimport { useHistory } from 'react-router-dom'\n\nconst database = app.database()\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      users: []\n    }\n  }\n\n  componentDidMount() {\n    const main = async () => {\n      await database.ref('/').orderByKey().on('child_added', async (snapshot) => {\n        this.setState(prevState => ({\n          users: [\n            ...prevState.users,\n            {\n              key: snapshot.key,\n              displayName: snapshot.val().user.displayName,\n              email: snapshot.val().user.email,\n            }\n          ]\n        }))\n      })\n    }\n\n    main()\n  }\n\n  componentWillUnmount() {\n    database.ref('/').off()\n  }\n\n  render() {\n    return (\n      <>\n        <Display users={this.state.users} />\n      </>\n    )\n  }\n}\n\nconst Display = (props) => {\n  const history = useHistory()\n  const toast = useToast()\n  const [notification, setNotification] = useState({\n    title: '',\n    body: ''\n  })\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  useEffect(() => {\n    const main = async () => {\n      const email = await app.auth().currentUser.email\n      if (email !== 'admin@admin.com') {\n        history.push('/')\n      }\n    }\n    main()\n  }, [history])\n\n  const signOutUser = () => {\n    app.auth().signOut();\n  }\n\n  const handleNotification = async () => {\n    if (notification.title !== '' && notification.body !== '') {\n      await app.database().ref('/').on('child_added', async snapshot => {\n        await app.database().ref(`${snapshot.key}/notifications`).push({\n          title: notification.title,\n          body: notification.body,\n          date: JSON.stringify(Date.now()),\n          viewed: false\n        })\n      })\n      setNotification({\n        title: '',\n        body: '',\n      })\n      onClose()\n      // app.database().ref('/').off()\n    } else {\n      toast({\n        title: \"Uh Oh :(\",\n        description: \"Please make sure to fill all fields\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      })\n    }\n  }\n\n  const handleNotifChange = (event) => {\n    const value = event.target.value\n    setNotification({\n      ...notification,\n      [event.target.name]: value\n    })\n  }\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent bg='gray.800'>\n          <ModalHeader color='white'>New Notification</ModalHeader>\n          <ModalCloseButton color='white' />\n          <ModalBody>\n            <form onSubmit={handleNotification}>\n              <Input name='title' value={notification.title} onChange={handleNotifChange} color='white' variant='flushed' placeholder='Title' />\n              <Input name='body' value={notification.body} onChange={handleNotifChange} mt='5%' color='white' variant='flushed' placeholder='Body' />\n            </form>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button colorScheme=\"cyan\" mr={3} onClick={onClose}>\n              Close\n            </Button>\n            <Button onClick={handleNotification} colorScheme='red' variant=\"ghost\">Save</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n      <Box w=\"100%\" h=\"100vh\" overflow=\"auto\" bg=\"gray.800\">\n        <ChevronLeftIcon pos='absolute' _hover={{cursor: 'pointer'}} onClick={() => history.push('/')} w={45} h={45} color='white' />\n        <Button left={['35%', '60%', '65%', '72%']} w={['35%', '20%', '20%', '10%']} mt='2%' flexDir='end' onClick={onOpen} colorScheme=\"cyan\">New Notification</Button>\n        <Button left={['43%', '63%', '68%', '75%']} w={['20%', '15%', '10%', '8%']} mt='2%' flexDir='end' onClick={signOutUser} colorScheme=\"red\">Logout</Button>\n        <Text fontWeight={200} color='white' fontSize={30} textAlign='center'>Users</Text>\n        <Table mt='2%' borderWidth={5} borderRadius={50} borderColor='blue.800' variant='unstyled' align='center' mb='5%' w='50%' >\n          <Thead >\n            <Tr >\n              <Th color='blue.600'>#</Th>\n              <Th color='blue.600'>Name</Th>\n              <Th color='blue.600'>Email</Th>\n            </Tr>\n          </Thead>\n          <Tbody color='white'>\n            {/* <Tr>\n              <Td>inches</Td>\n              <Td>millimetres (mm)</Td>\n              <Td>25.4</Td>\n            </Tr>\n            <Tr>\n              <Td>feet</Td>\n              <Td>centimetres (cm)</Td>\n              <Td>30.48</Td>\n            </Tr>\n            <Tr>\n              <Td>yards</Td>\n              <Td>metres (m)</Td>\n              <Td>0.91444</Td>\n            </Tr> */}\n            {props.users.map((data, index) => (\n              <Tr color='blue.50'>\n                <Td color='blue.100'>{index}</Td>\n                <Td color='blue.100'>{data.displayName}</Td>\n                <Td wordBreak='break-all' color='blue.100'>{data.email}</Td>\n              </Tr>\n            ))}\n          </Tbody>\n        </Table>\n      </Box>\n    </>\n  )\n}\n\nexport default Admin","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from './Auth';\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest}) => {\n  // const {currentUser} = useContext(AuthContext);\n  const {currentUser} = useContext(AuthContext)\n  return(\n    <Route\n      {...rest}\n      render={routeProps =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Redirect to={'/login'} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute\n","import React from 'react'\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Home from './Components/Home'\nimport Login from './Components/Login'\nimport Signup from './Components/Signup'\nimport PageNotFound from './Components/PageNotFound'\nimport ForgotPass from './Components/ForgotPass'\nimport Admin from './Components/Admin'\n\nimport PrivateRoute from './PrivateRoute'\n\nimport { AuthProvider } from './Auth';\n\nconst App = () => {\n  return (\n    <>\n      <AuthProvider>\n        <Router>\n          <Switch>\n            {/* <Route exact path=\"/\" render={(props) => <Home {...props} />} /> */}\n            <PrivateRoute exact path='/' component={(props) => <Home {...props} />} />\n            <PrivateRoute exact path='/admin' component={(props) => <Admin {...props} />} />\n            <Route exact path=\"/login\" render={(props) => <Login {...props} />} />\n            <Route exact path=\"/signup\" render={(props) => <Signup {...props} />} />\n            <Route exact path=\"/forgotpassword\" render={(props) => <ForgotPass {...props} />} />\n            <Route component={PageNotFound} />\n          </Switch>\n        </Router>\n      </AuthProvider>\n    </>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { ChakraProvider } from '@chakra-ui/react'\n\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}